{"version":3,"sources":["components/NavBar/Navbar.js","components/AddGoal.js","ui/FormWrapper.js","components/Goal.js","ui/allDone.gif","ui/Goals.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","onClick","toggleMode","AddGoal","useState","enteredGoal","setEnteredGoal","GoalData","id","Math","random","toString","goal","onSubmit","event","preventDefault","formData","value","required","onChange","target","placeholder","type","Wrapper","FormData","onRespondData","Goal","data","Index","index","deleteGoal","Goals","goalsDeleteIndex","i","deleteHandeler","undefined","goalItem","length","src","done","alt","map","Initial_Goal","App","finalGoal","setFinalGoal","isDarkMode","setisDarkMode","useEffect","localStorage","setItem","JSON","stringify","RecievedData","getLocalItem","deleteIndex","splice","prevUpdatedGoal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59020033.chunk.js","sourcesContent":["import React, {  } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div className={props.mode === 'light'?\"lightNavBar\":\"darkNavBar\"}>\r\n      <div className={props.mode === 'light' ?\"light-navbar-left\":\"dark-navbar-left\"}>\r\n        <p>Your Goals</p>\r\n      </div>\r\n      <div className=\"navbar-right\">\r\n        <div className=\"darkModeContainer\">\r\n          <button onClick={props.toggleMode} className={props.mode === 'light' ? \"light-Mode-btn\":\"dark-Mode-btn\"} >\r\n            {props.mode === 'light' ? \"Enable Dark Mode\" : \"Enable Light Mode\" }\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React ,{ useState } from \"react\";\r\n\r\nimport \"./AddGoal.css\";\r\n\r\nfunction AddGoal(props) {\r\n  \r\n  const [enteredGoal , setEnteredGoal] = useState('')\r\n\r\n  const goalChangeHandeler = (event)=>{\r\n    setEnteredGoal(event.target.value)\r\n  }\r\n\r\n  const GoalData = {\r\n    id:Math.random().toString(),\r\n    goal:enteredGoal\r\n\r\n  }\r\n\r\n  const onSubmitHandeler = (event)=>{\r\n    event.preventDefault();\r\n    props.formData(GoalData);\r\n    setEnteredGoal(\"\");\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"AddGoal-Form\">\r\n      <h2 className={props.mode === 'light' ? \"light-form-heading\" : \"dark-form-heading\"}>What's your plan for the Today?</h2>\r\n      <form onSubmit={onSubmitHandeler} >\r\n        <input value={enteredGoal} required onChange={goalChangeHandeler} placeholder=\"Add your Goal here...\" className={props.mode === 'light' ?\"light-form-input\":\"dark-form-input\"} />\r\n        <button type=\"submit\" className={props.mode === 'light'?\"light-form-btn\":\"dark-form-btn\"}>Add Goal</button>\r\n      </form>\r\n      {/* <button>Enable Dark Mode</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddGoal;\r\n","import React from 'react'\r\nimport AddGoal from '../components/AddGoal'\r\nimport \"./FormWrapper.css\"\r\n\r\nfunction Wrapper(props) {\r\n    const fetchedData = (FormData)=>{\r\n        props.onRespondData(FormData);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={props.mode === 'light'?\"light-wrapper\":\"dark-wrapper\"}>\r\n            <AddGoal formData={fetchedData} mode={props.mode}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper\r\n","import React from \"react\";\r\nimport \"./Goal.css\";\r\n\r\nfunction Goal(props) {\r\n  const onDeleteHandler = ()=>{\r\n    const Index = props.index;\r\n    props.deleteGoal(Index);\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className={props.mode === 'light'?\"light-goal-wrapper\":\"dark-goal-wrapper\"} key={props.data.id}>\r\n      <p className=\"goal-heading\">{props.data.goal}</p>\r\n      <button className={props.mode === 'light'?\"light-goal-delete\":\"dark-goal-delete\"} onClick={onDeleteHandler} >Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Goal;\r\n","export default __webpack_public_path__ + \"static/media/allDone.863a9f72.gif\";","import React from \"react\";\r\nimport \"./Goals.css\";\r\nimport Goal from \"../components/Goal\";\r\nimport done from \"./allDone.gif\";\r\n\r\n\r\nfunction Goals(props) {\r\n  const goalsDeleteIndex = (i) => {\r\n    props.deleteHandeler(i);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {undefined !== props.goalItem && props.goalItem.length === 0 ? (\r\n       <img className=\"done-logo\" src={done} alt=\"logo here\"/>\r\n      ) : (\r\n        <div className=\"Goals-Wrapper\">\r\n          {props.goalItem.map((data, index) => {\r\n            return (\r\n              <Goal\r\n                key={index}\r\n                index={index}\r\n                data={data}\r\n                deleteGoal={goalsDeleteIndex}\r\n                mode={props.mode}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Goals;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport FormWrapper from \"./ui/FormWrapper\";\nimport Goals from \"./ui/Goals\";\n\nconst Initial_Goal = [];\n\n//getting data from local storage\n// const getLocalItem = () => {\n//   let list = localStorage.getItem(\"goals\");\n//   if (list) {\n//     return JSON.parse(localStorage.getItem(\"goals\"));\n//   }\n// };\n\nfunction App() {\n  const [finalGoal, setFinalGoal] = useState(Initial_Goal);\n\n  const [isDarkMode, setisDarkMode] = useState('light');\n\n  //toggleMode  Function\n  const toggleMode = () => {\n    if(isDarkMode === 'light')\n    {\n      setisDarkMode('dark')\n\n    }\n    else{\n      setisDarkMode('light')\n    }\n  };\n\n  //create goal handeler\n  const recievedData = (RecievedData) => {\n    setFinalGoal((getLocalItem) => {\n      return setFinalGoal([RecievedData, ...getLocalItem]);\n    });\n  };\n\n  //add goals to local storage\n  useEffect(() => {\n    localStorage.setItem(\"goals\", JSON.stringify(finalGoal));\n  });\n\n  // delete goal handeler\n  const onDeleteHandeler = (deleteIndex) => {\n    finalGoal.splice(deleteIndex, 1);\n    // console.log(updatedGoal);\n    setFinalGoal((prevUpdatedGoal) => {\n      return setFinalGoal([...prevUpdatedGoal]);\n    });\n  };\n\n  \n  return (\n    <>\n      <Navbar mode={isDarkMode} toggleMode={toggleMode} />\n      <div className={isDarkMode==='light'?\"light-main\":\"dark-main\"}>\n        <FormWrapper onRespondData={recievedData} mode={isDarkMode} />\n        <Goals goalItem={finalGoal} deleteHandeler={onDeleteHandeler} mode={isDarkMode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}